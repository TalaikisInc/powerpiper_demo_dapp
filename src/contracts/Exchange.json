{
  "contractName": "Exchange",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "getOrdersLength",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "getRedemption",
      "outputs": [
        {
          "name": "",
          "type": "address"
        },
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "string"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_value",
          "type": "uint256"
        },
        {
          "name": "_location",
          "type": "string"
        }
      ],
      "name": "redeem",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getRedemptionsLength",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_index",
          "type": "uint256"
        },
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "approveOrder",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_url",
          "type": "bytes32"
        },
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "addCertificate",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "buyDirect",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "getCertificate",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        },
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_addr",
          "type": "address"
        }
      ],
      "name": "deleteUser",
      "outputs": [
        {
          "name": "index",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_addr",
          "type": "address"
        }
      ],
      "name": "getUser",
      "outputs": [
        {
          "name": "index",
          "type": "uint256"
        },
        {
          "name": "email",
          "type": "bytes32"
        },
        {
          "name": "firstName",
          "type": "bytes32"
        },
        {
          "name": "lastName",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "approveRedemption",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "reserves",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "deleteCertificate",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_addr",
          "type": "address"
        },
        {
          "name": "_email",
          "type": "bytes32"
        },
        {
          "name": "_firstName",
          "type": "bytes32"
        },
        {
          "name": "_lastName",
          "type": "bytes32"
        }
      ],
      "name": "updateUser",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getUserCount",
      "outputs": [
        {
          "name": "count",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getCertificatesLength",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "declineOrder",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "getOrder",
      "outputs": [
        {
          "name": "",
          "type": "address"
        },
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_addr",
          "type": "address"
        }
      ],
      "name": "existsUser",
      "outputs": [
        {
          "name": "isIndexed",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "declineRedemption",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_addr",
          "type": "address"
        },
        {
          "name": "_email",
          "type": "bytes32"
        },
        {
          "name": "_firstName",
          "type": "bytes32"
        },
        {
          "name": "_lastName",
          "type": "bytes32"
        }
      ],
      "name": "newtUser",
      "outputs": [
        {
          "name": "index",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getUserAtIndex",
      "outputs": [
        {
          "name": "_addr",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_tokenAddress",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "DestroyTokensEvent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_redeember",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "_timestamp",
          "type": "uint256"
        }
      ],
      "name": "RedeemEvent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_buyer",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "_timestamp",
          "type": "uint256"
        }
      ],
      "name": "BuyDirectEvent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_addr",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_index",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "_email",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "name": "_firstName",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "name": "_lastName",
          "type": "bytes32"
        }
      ],
      "name": "NewUser",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_addr",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_index",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "_email",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "name": "_firstName",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "name": "_lastName",
          "type": "bytes32"
        }
      ],
      "name": "UpdateUser",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_addr",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "DeleteUser",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "destroyTokens",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "calculateFee",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": "0x606060405260006005556000600b556001600c55341561001e57600080fd5b60405160208061371883398101604052808051906020019091905050336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061364d806100cb6000396000f30060606040526004361061015f576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806307c2e16c146101645780631953cc211461018d57806324b76fd51461026a578063342a382d146102e45780634198bb7b1461030d57806347c9e35614610339578063483e0bd91461036957806351640fee146103735780635c60f226146103c057806367fbd2891461040d5780636f77926b1461043057806370047924146104aa57806375172a8b146104cd578063883eeb6e146104f65780638da5cb5b1461051957806399a5d7471461056e5780639bd19ca9146105a5578063b5cb15f71461061d578063c503b4da14610646578063ccbdb85c1461066f578063d09ef24114610692578063f2fde38b14610703578063f409e87d1461073c578063f4f331581461078d578063f53f35ff146107b0578063fc0c546a14610824578063ffcc7bbf14610879575b600080fd5b341561016f57600080fd5b6101776108dc565b6040518082815260200191505060405180910390f35b341561019857600080fd5b6101ae6004808035906020019091905050610944565b604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200184815260200180602001838152602001828103825284818151815260200191508051906020019080838360005b8381101561022c578082015181840152602081019050610211565b50505050905090810190601f1680156102595780820380516001836020036101000a031916815260200191505b509550505050505060405180910390f35b341561027557600080fd5b6102ce600480803590602001909190803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091905050610b12565b6040518082815260200191505060405180910390f35b34156102ef57600080fd5b6102f7610f75565b6040518082815260200191505060405180910390f35b341561031857600080fd5b6103376004808035906020019091908035906020019091905050610fdd565b005b341561034457600080fd5b610367600480803560001916906020019091908035906020019091905050611210565b005b61037161130a565b005b341561037e57600080fd5b610394600480803590602001909190505061145f565b604051808460001916600019168152602001838152602001828152602001935050505060405180910390f35b34156103cb57600080fd5b6103f7600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611535565b6040518082815260200191505060405180910390f35b341561041857600080fd5b61042e60048080359060200190919050506118c8565b005b341561043b57600080fd5b610467600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611a17565b6040518085815260200184600019166000191681526020018360001916600019168152602001826000191660001916815260200194505050505060405180910390f35b34156104b557600080fd5b6104cb6004808035906020019091905050611bea565b005b34156104d857600080fd5b6104e0611f5e565b6040518082815260200191505060405180910390f35b341561050157600080fd5b6105176004808035906020019091905050611f64565b005b341561052457600080fd5b61052c6120ac565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561057957600080fd5b61058f60048080359060200190919050506120d1565b6040518082815260200191505060405180910390f35b34156105b057600080fd5b610603600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035600019169060200190919080356000191690602001909190803560001916906020019091905050612104565b604051808215151515815260200191505060405180910390f35b341561062857600080fd5b6106306123a4565b6040518082815260200191505060405180910390f35b341561065157600080fd5b6106596123b1565b6040518082815260200191505060405180910390f35b341561067a57600080fd5b6106906004808035906020019091905050612419565b005b341561069d57600080fd5b6106b36004808035906020019091905050612663565b604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828152602001935050505060405180910390f35b341561070e57600080fd5b61073a600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505061277d565b005b341561074757600080fd5b610773600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506128d2565b604051808215151515815260200191505060405180910390f35b341561079857600080fd5b6107ae600480803590602001909190505061299d565b005b34156107bb57600080fd5b61080e600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035600019169060200190919080356000191690602001909190803560001916906020019091905050612d5a565b6040518082815260200191505060405180910390f35b341561082f57600080fd5b610837613070565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561088457600080fd5b61089a6004808035906020019091905050613096565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561093957600080fd5b600380549050905090565b60008061094f61316c565b6000610959613180565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156109b457600080fd5b6007868154811015156109c357fe5b9060005260206000209060040201608060405190810160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610acc5780601f10610aa157610100808354040283529160200191610acc565b820191906000526020600020905b815481529060010190602001808311610aaf57829003601f168201915b5050505050815260200160028201548152602001600382015481525050905080600001518160400151826020015183606001518191509450945094509450509193509193565b6000610b1c613180565b83600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336000604051602001526040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b1515610be257600080fd5b6102c65a03f11515610bf357600080fd5b5050506040518051905010151515610c0a57600080fd5b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b333866000604051602001526040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1515610cd757600080fd5b6102c65a03f11515610ce857600080fd5b5050506040518051905050600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330876000604051602001526040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b1515610df457600080fd5b6102c65a03f11515610e0557600080fd5b50505060405180519050506080604051908101604052803373ffffffffffffffffffffffffffffffffffffffff16815260200184815260200185815260200142815250905060078054806001018281610e5e91906131c5565b9160005260206000209060040201600083909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001019080519060200190610ed79291906131f7565b5060408201518160020155606082015181600301555050507f0e46a0c191564864bd7a70f14ef566cba8f8494211c829a52275f65d5b7d4ce2816000015182604001518360600151604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828152602001935050505060405180910390a15092915050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610fd257600080fd5b600780549050905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561103a57600080fd5b600060038481548110151561104b57fe5b9060005260206000209060030201600101541015151561106a57600080fd5b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166399a5d747836000604051602001526040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180828152602001915050602060405180830381600087803b151561110357600080fd5b6102c65a03f1151561111457600080fd5b505050604051805190509050611133818361313590919063ffffffff16565b9150600360016003805490500381548110151561114c57fe5b906000526020600020906003020160038481548110151561116957fe5b90600052602060002090600302016000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001820154816001015560028201548160020155905050600380548091906001900361120a9190613277565b50505050565b6112186132a9565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561127357600080fd5b606060405190810160405280846000191681526020018381526020014281525090506112ae816020015160055461314e90919063ffffffff16565b600581905550600680548060010182816112c891906132ce565b91600052602060002090600302016000839091909150600082015181600001906000191690556020820151816001015560408201518160020155505050505050565b611312613300565b60003411151561132157600080fd5b6060604051908101604052803373ffffffffffffffffffffffffffffffffffffffff168152602001348152602001428152509050600380548060010182816113699190613338565b9160005260206000209060030201600083909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155604082015181600201555050507f2c33c574213feb1047a6378e9beca724f8bda16b6624875a6dee2edb3edfcdb6816000015182602001518360400151604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828152602001935050505060405180910390a150565b600080600061146c6132a9565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156114c757600080fd5b6006858154811015156114d657fe5b906000526020600020906003020160606040519081016040529081600082015460001916600019168152602001600182015481526020016002820154815250509050806000015181602001518260400151935093509350509193909250565b60008060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561159557600080fd5b838073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156115d057600080fd5b600115156115dd866128d2565b15151415156115eb57600080fd5b600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001549250600260016002805490500381548110151561164757fe5b906000526020600020900160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691508160028481548110151561168557fe5b906000526020600020900160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000181905550600280548091906001900361172a919061336a565b508473ffffffffffffffffffffffffffffffffffffffff167f117183c06981515bdfa0b70d0448d8eb6ba07648cda62ab7c2b4361eeff80a1b846040518082815260200191505060405180910390a28173ffffffffffffffffffffffffffffffffffffffff167f36cd692caa63e05d06ec64ae3a07dffe3b224fecb32af5fa7bc1469f5bcdde5784600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020154600160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301546040518085815260200184600019166000191681526020018360001916600019168152602001826000191660001916815260200194505050505060405180910390a2829350505050919050565b80600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015151561191657600080fd5b61196881600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461313590919063ffffffff16565b600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506119c081600b5461313590919063ffffffff16565b600b819055503373ffffffffffffffffffffffffffffffffffffffff167f97be2b260c37911b6820288ff7c611943a32889e8ce0bf313da8569522073d4d826040518082815260200191505060405180910390a250565b6000806000806000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611a7857600080fd5b848073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611ab357600080fd5b60011515611ac0876128d2565b1515141515611ace57600080fd5b600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154600160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154600160008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020154600160008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301549450945094509450509193509193565b611bf2613180565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611c4d57600080fd5b6000600783815481101515611c5e57fe5b90600052602060002090600402016002015410151515611c7d57600080fd5b600782815481101515611c8c57fe5b9060005260206000209060040201608060405190810160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611d955780601f10611d6a57610100808354040283529160200191611d95565b820191906000526020600020905b815481529060010190602001808311611d7857829003601f168201915b50505050508152602001600282015481526020016003820154815250509050600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166367fbd28982604001516040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180828152602001915050600060405180830381600087803b1515611e4857600080fd5b6102c65a03f11515611e5957600080fd5b5050506007600160078054905003815481101515611e7357fe5b9060005260206000209060040201600783815481101515611e9057fe5b90600052602060002090600402016000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060018201816001019080546001816001161561010002031660029004611f2c929190613396565b5060028201548160020155600382015481600301559050506007805480919060019003611f59919061341d565b505050565b60055481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611fbf57600080fd5b6000600682815481101515611fd057fe5b90600052602060002090600302016001015410151515611fef57600080fd5b61202460068281548110151561200157fe5b90600052602060002090600302016001015460055461313590919063ffffffff16565b600581905550600660016006805490500381548110151561204157fe5b906000526020600020906003020160068281548110151561205e57fe5b906000526020600020906003020160008201548160000190600019169055600182015481600101556002820154816002015590505060068054809190600190036120a8919061344f565b5050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806103e8600c5484028115156120e557fe5b04905060008114156120fa57600191506120fe565b8091505b50919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561216157600080fd5b848073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561219c57600080fd5b846005602060ff161115156121b057600080fd5b846005602060ff161115156121c457600080fd5b846005602060ff161115156121d857600080fd5b600115156121e58a6128d2565b15151415156121f357600080fd5b87600160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101816000191690555086600160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201816000191690555085600160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030181600019169055508873ffffffffffffffffffffffffffffffffffffffff167f36cd692caa63e05d06ec64ae3a07dffe3b224fecb32af5fa7bc1469f5bcdde57600160008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001548a8a8a6040518085815260200184600019166000191681526020018360001916600019168152602001826000191660001916815260200194505050505060405180910390a26001945050505050949350505050565b6000600280549050905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561240e57600080fd5b600680549050905090565b612421613300565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561247c57600080fd5b600060038381548110151561248d57fe5b906000526020600020906003020160010154101515156124ac57600080fd5b6003828154811015156124bb57fe5b9060005260206000209060030201606060405190810160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481526020016002820154815250509050806000015173ffffffffffffffffffffffffffffffffffffffff166108fc82602001519081150290604051600060405180830381858888f19350505050151561258957600080fd5b60036001600380549050038154811015156125a057fe5b90600052602060002090600302016003838154811015156125bd57fe5b90600052602060002090600302016000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001820154816001015560028201548160020155905050600380548091906001900361265e9190613277565b505050565b6000806000612670613300565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156126cb57600080fd5b6003858154811015156126da57fe5b9060005260206000209060030201606060405190810160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481526020016002820154815250509050806000015181602001518260400151935093509350509193909250565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156127d857600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561281457600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008060028054905014156128ea5760009050612998565b8173ffffffffffffffffffffffffffffffffffffffff166002600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015481548110151561295257fe5b906000526020600020900160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161490505b919050565b6129a5613180565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515612a0057600080fd5b6000600783815481101515612a1157fe5b90600052602060002090600402016002015410151515612a3057600080fd5b600782815481101515612a3f57fe5b9060005260206000209060040201608060405190810160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612b485780601f10612b1d57610100808354040283529160200191612b48565b820191906000526020600020905b815481529060010190602001808311612b2b57829003601f168201915b50505050508152602001600282015481526020016003820154815250509050600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb826000015183604001516000604051602001526040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1515612c3c57600080fd5b6102c65a03f11515612c4d57600080fd5b50505060405180519050506007600160078054905003815481101515612c6f57fe5b9060005260206000209060040201600783815481101515612c8c57fe5b90600052602060002090600402016000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060018201816001019080546001816001161561010002031660029004612d28929190613396565b5060028201548160020155600382015481600301559050506007805480919060019003612d55919061341d565b505050565b6000836005602060ff16111515612d7057600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515612dcb57600080fd5b836005602060ff16111515612ddf57600080fd5b836005602060ff16111515612df357600080fd5b60001515612e00896128d2565b1515141515612e0e57600080fd5b86600160008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101816000191690555085600160008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201816000191690555084600160008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003018160001916905550600160028054806001018281612f059190613481565b916000526020600020900160008b909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555003600160008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055508773ffffffffffffffffffffffffffffffffffffffff167f78b833eacd29aac1183e31c8289157ed550f3b1f9f1526bf2055ef195cac287f600160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001548989896040518085815260200184600019166000191681526020018360001916600019168152602001826000191660001916815260200194505050505060405180910390a26001600280549050039350505050949350505050565b600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156130f357600080fd5b60028281548110151561310257fe5b906000526020600020900160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600082821115151561314357fe5b818303905092915050565b600080828401905083811015151561316257fe5b8091505092915050565b602060405190810160405280600081525090565b608060405190810160405280600073ffffffffffffffffffffffffffffffffffffffff1681526020016131b16134ad565b815260200160008152602001600081525090565b8154818355818115116131f2576004028160040283600052602060002091820191016131f191906134c1565b5b505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061323857805160ff1916838001178555613266565b82800160010185558215613266579182015b8281111561326557825182559160200191906001019061324a565b5b5090506132739190613527565b5090565b8154818355818115116132a4576003028160030283600052602060002091820191016132a3919061354c565b5b505050565b6060604051908101604052806000801916815260200160008152602001600081525090565b8154818355818115116132fb576003028160030283600052602060002091820191016132fa91906135a2565b5b505050565b606060405190810160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600081525090565b81548183558181151161336557600302816003028360005260206000209182019101613364919061354c565b5b505050565b815481835581811511613391578183600052602060002091820191016133909190613527565b5b505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106133cf578054855561340c565b8280016001018555821561340c57600052602060002091601f016020900482015b8281111561340b5782548255916001019190600101906133f0565b5b5090506134199190613527565b5090565b81548183558181151161344a5760040281600402836000526020600020918201910161344991906134c1565b5b505050565b81548183558181151161347c5760030281600302836000526020600020918201910161347b91906135a2565b5b505050565b8154818355818115116134a8578183600052602060002091820191016134a79190613527565b5b505050565b602060405190810160405280600081525090565b61352491905b8082111561352057600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560018201600061350791906135d9565b60028201600090556003820160009055506004016134c7565b5090565b90565b61354991905b8082111561354557600081600090555060010161352d565b5090565b90565b61359f91905b8082111561359b57600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001820160009055600282016000905550600301613552565b5090565b90565b6135d691905b808211156135d25760008082016000905560018201600090556002820160009055506003016135a8565b5090565b90565b50805460018160011615610100020316600290046000825580601f106135ff575061361e565b601f01602090049060005260206000209081019061361d9190613527565b5b505600a165627a7a7230582094c4450b4507ee4bda40c129baf3ee1ebfdcdad12a334a4634a08a0ea72fc6730029",
  "deployedBytecode": "0x60606040526004361061015f576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806307c2e16c146101645780631953cc211461018d57806324b76fd51461026a578063342a382d146102e45780634198bb7b1461030d57806347c9e35614610339578063483e0bd91461036957806351640fee146103735780635c60f226146103c057806367fbd2891461040d5780636f77926b1461043057806370047924146104aa57806375172a8b146104cd578063883eeb6e146104f65780638da5cb5b1461051957806399a5d7471461056e5780639bd19ca9146105a5578063b5cb15f71461061d578063c503b4da14610646578063ccbdb85c1461066f578063d09ef24114610692578063f2fde38b14610703578063f409e87d1461073c578063f4f331581461078d578063f53f35ff146107b0578063fc0c546a14610824578063ffcc7bbf14610879575b600080fd5b341561016f57600080fd5b6101776108dc565b6040518082815260200191505060405180910390f35b341561019857600080fd5b6101ae6004808035906020019091905050610944565b604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200184815260200180602001838152602001828103825284818151815260200191508051906020019080838360005b8381101561022c578082015181840152602081019050610211565b50505050905090810190601f1680156102595780820380516001836020036101000a031916815260200191505b509550505050505060405180910390f35b341561027557600080fd5b6102ce600480803590602001909190803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091905050610b12565b6040518082815260200191505060405180910390f35b34156102ef57600080fd5b6102f7610f75565b6040518082815260200191505060405180910390f35b341561031857600080fd5b6103376004808035906020019091908035906020019091905050610fdd565b005b341561034457600080fd5b610367600480803560001916906020019091908035906020019091905050611210565b005b61037161130a565b005b341561037e57600080fd5b610394600480803590602001909190505061145f565b604051808460001916600019168152602001838152602001828152602001935050505060405180910390f35b34156103cb57600080fd5b6103f7600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611535565b6040518082815260200191505060405180910390f35b341561041857600080fd5b61042e60048080359060200190919050506118c8565b005b341561043b57600080fd5b610467600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611a17565b6040518085815260200184600019166000191681526020018360001916600019168152602001826000191660001916815260200194505050505060405180910390f35b34156104b557600080fd5b6104cb6004808035906020019091905050611bea565b005b34156104d857600080fd5b6104e0611f5e565b6040518082815260200191505060405180910390f35b341561050157600080fd5b6105176004808035906020019091905050611f64565b005b341561052457600080fd5b61052c6120ac565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561057957600080fd5b61058f60048080359060200190919050506120d1565b6040518082815260200191505060405180910390f35b34156105b057600080fd5b610603600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035600019169060200190919080356000191690602001909190803560001916906020019091905050612104565b604051808215151515815260200191505060405180910390f35b341561062857600080fd5b6106306123a4565b6040518082815260200191505060405180910390f35b341561065157600080fd5b6106596123b1565b6040518082815260200191505060405180910390f35b341561067a57600080fd5b6106906004808035906020019091905050612419565b005b341561069d57600080fd5b6106b36004808035906020019091905050612663565b604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828152602001935050505060405180910390f35b341561070e57600080fd5b61073a600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505061277d565b005b341561074757600080fd5b610773600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506128d2565b604051808215151515815260200191505060405180910390f35b341561079857600080fd5b6107ae600480803590602001909190505061299d565b005b34156107bb57600080fd5b61080e600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035600019169060200190919080356000191690602001909190803560001916906020019091905050612d5a565b6040518082815260200191505060405180910390f35b341561082f57600080fd5b610837613070565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561088457600080fd5b61089a6004808035906020019091905050613096565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561093957600080fd5b600380549050905090565b60008061094f61316c565b6000610959613180565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156109b457600080fd5b6007868154811015156109c357fe5b9060005260206000209060040201608060405190810160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610acc5780601f10610aa157610100808354040283529160200191610acc565b820191906000526020600020905b815481529060010190602001808311610aaf57829003601f168201915b5050505050815260200160028201548152602001600382015481525050905080600001518160400151826020015183606001518191509450945094509450509193509193565b6000610b1c613180565b83600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336000604051602001526040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b1515610be257600080fd5b6102c65a03f11515610bf357600080fd5b5050506040518051905010151515610c0a57600080fd5b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b333866000604051602001526040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1515610cd757600080fd5b6102c65a03f11515610ce857600080fd5b5050506040518051905050600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330876000604051602001526040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b1515610df457600080fd5b6102c65a03f11515610e0557600080fd5b50505060405180519050506080604051908101604052803373ffffffffffffffffffffffffffffffffffffffff16815260200184815260200185815260200142815250905060078054806001018281610e5e91906131c5565b9160005260206000209060040201600083909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001019080519060200190610ed79291906131f7565b5060408201518160020155606082015181600301555050507f0e46a0c191564864bd7a70f14ef566cba8f8494211c829a52275f65d5b7d4ce2816000015182604001518360600151604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828152602001935050505060405180910390a15092915050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610fd257600080fd5b600780549050905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561103a57600080fd5b600060038481548110151561104b57fe5b9060005260206000209060030201600101541015151561106a57600080fd5b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166399a5d747836000604051602001526040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180828152602001915050602060405180830381600087803b151561110357600080fd5b6102c65a03f1151561111457600080fd5b505050604051805190509050611133818361313590919063ffffffff16565b9150600360016003805490500381548110151561114c57fe5b906000526020600020906003020160038481548110151561116957fe5b90600052602060002090600302016000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001820154816001015560028201548160020155905050600380548091906001900361120a9190613277565b50505050565b6112186132a9565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561127357600080fd5b606060405190810160405280846000191681526020018381526020014281525090506112ae816020015160055461314e90919063ffffffff16565b600581905550600680548060010182816112c891906132ce565b91600052602060002090600302016000839091909150600082015181600001906000191690556020820151816001015560408201518160020155505050505050565b611312613300565b60003411151561132157600080fd5b6060604051908101604052803373ffffffffffffffffffffffffffffffffffffffff168152602001348152602001428152509050600380548060010182816113699190613338565b9160005260206000209060030201600083909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155604082015181600201555050507f2c33c574213feb1047a6378e9beca724f8bda16b6624875a6dee2edb3edfcdb6816000015182602001518360400151604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828152602001935050505060405180910390a150565b600080600061146c6132a9565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156114c757600080fd5b6006858154811015156114d657fe5b906000526020600020906003020160606040519081016040529081600082015460001916600019168152602001600182015481526020016002820154815250509050806000015181602001518260400151935093509350509193909250565b60008060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561159557600080fd5b838073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156115d057600080fd5b600115156115dd866128d2565b15151415156115eb57600080fd5b600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001549250600260016002805490500381548110151561164757fe5b906000526020600020900160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691508160028481548110151561168557fe5b906000526020600020900160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000181905550600280548091906001900361172a919061336a565b508473ffffffffffffffffffffffffffffffffffffffff167f117183c06981515bdfa0b70d0448d8eb6ba07648cda62ab7c2b4361eeff80a1b846040518082815260200191505060405180910390a28173ffffffffffffffffffffffffffffffffffffffff167f36cd692caa63e05d06ec64ae3a07dffe3b224fecb32af5fa7bc1469f5bcdde5784600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020154600160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301546040518085815260200184600019166000191681526020018360001916600019168152602001826000191660001916815260200194505050505060405180910390a2829350505050919050565b80600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015151561191657600080fd5b61196881600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461313590919063ffffffff16565b600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506119c081600b5461313590919063ffffffff16565b600b819055503373ffffffffffffffffffffffffffffffffffffffff167f97be2b260c37911b6820288ff7c611943a32889e8ce0bf313da8569522073d4d826040518082815260200191505060405180910390a250565b6000806000806000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611a7857600080fd5b848073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611ab357600080fd5b60011515611ac0876128d2565b1515141515611ace57600080fd5b600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154600160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154600160008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020154600160008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301549450945094509450509193509193565b611bf2613180565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611c4d57600080fd5b6000600783815481101515611c5e57fe5b90600052602060002090600402016002015410151515611c7d57600080fd5b600782815481101515611c8c57fe5b9060005260206000209060040201608060405190810160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611d955780601f10611d6a57610100808354040283529160200191611d95565b820191906000526020600020905b815481529060010190602001808311611d7857829003601f168201915b50505050508152602001600282015481526020016003820154815250509050600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166367fbd28982604001516040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180828152602001915050600060405180830381600087803b1515611e4857600080fd5b6102c65a03f11515611e5957600080fd5b5050506007600160078054905003815481101515611e7357fe5b9060005260206000209060040201600783815481101515611e9057fe5b90600052602060002090600402016000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060018201816001019080546001816001161561010002031660029004611f2c929190613396565b5060028201548160020155600382015481600301559050506007805480919060019003611f59919061341d565b505050565b60055481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611fbf57600080fd5b6000600682815481101515611fd057fe5b90600052602060002090600302016001015410151515611fef57600080fd5b61202460068281548110151561200157fe5b90600052602060002090600302016001015460055461313590919063ffffffff16565b600581905550600660016006805490500381548110151561204157fe5b906000526020600020906003020160068281548110151561205e57fe5b906000526020600020906003020160008201548160000190600019169055600182015481600101556002820154816002015590505060068054809190600190036120a8919061344f565b5050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806103e8600c5484028115156120e557fe5b04905060008114156120fa57600191506120fe565b8091505b50919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561216157600080fd5b848073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561219c57600080fd5b846005602060ff161115156121b057600080fd5b846005602060ff161115156121c457600080fd5b846005602060ff161115156121d857600080fd5b600115156121e58a6128d2565b15151415156121f357600080fd5b87600160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101816000191690555086600160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201816000191690555085600160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030181600019169055508873ffffffffffffffffffffffffffffffffffffffff167f36cd692caa63e05d06ec64ae3a07dffe3b224fecb32af5fa7bc1469f5bcdde57600160008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001548a8a8a6040518085815260200184600019166000191681526020018360001916600019168152602001826000191660001916815260200194505050505060405180910390a26001945050505050949350505050565b6000600280549050905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561240e57600080fd5b600680549050905090565b612421613300565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561247c57600080fd5b600060038381548110151561248d57fe5b906000526020600020906003020160010154101515156124ac57600080fd5b6003828154811015156124bb57fe5b9060005260206000209060030201606060405190810160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481526020016002820154815250509050806000015173ffffffffffffffffffffffffffffffffffffffff166108fc82602001519081150290604051600060405180830381858888f19350505050151561258957600080fd5b60036001600380549050038154811015156125a057fe5b90600052602060002090600302016003838154811015156125bd57fe5b90600052602060002090600302016000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001820154816001015560028201548160020155905050600380548091906001900361265e9190613277565b505050565b6000806000612670613300565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156126cb57600080fd5b6003858154811015156126da57fe5b9060005260206000209060030201606060405190810160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481526020016002820154815250509050806000015181602001518260400151935093509350509193909250565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156127d857600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561281457600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008060028054905014156128ea5760009050612998565b8173ffffffffffffffffffffffffffffffffffffffff166002600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015481548110151561295257fe5b906000526020600020900160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161490505b919050565b6129a5613180565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515612a0057600080fd5b6000600783815481101515612a1157fe5b90600052602060002090600402016002015410151515612a3057600080fd5b600782815481101515612a3f57fe5b9060005260206000209060040201608060405190810160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612b485780601f10612b1d57610100808354040283529160200191612b48565b820191906000526020600020905b815481529060010190602001808311612b2b57829003601f168201915b50505050508152602001600282015481526020016003820154815250509050600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb826000015183604001516000604051602001526040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1515612c3c57600080fd5b6102c65a03f11515612c4d57600080fd5b50505060405180519050506007600160078054905003815481101515612c6f57fe5b9060005260206000209060040201600783815481101515612c8c57fe5b90600052602060002090600402016000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060018201816001019080546001816001161561010002031660029004612d28929190613396565b5060028201548160020155600382015481600301559050506007805480919060019003612d55919061341d565b505050565b6000836005602060ff16111515612d7057600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515612dcb57600080fd5b836005602060ff16111515612ddf57600080fd5b836005602060ff16111515612df357600080fd5b60001515612e00896128d2565b1515141515612e0e57600080fd5b86600160008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101816000191690555085600160008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201816000191690555084600160008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003018160001916905550600160028054806001018281612f059190613481565b916000526020600020900160008b909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555003600160008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055508773ffffffffffffffffffffffffffffffffffffffff167f78b833eacd29aac1183e31c8289157ed550f3b1f9f1526bf2055ef195cac287f600160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001548989896040518085815260200184600019166000191681526020018360001916600019168152602001826000191660001916815260200194505050505060405180910390a26001600280549050039350505050949350505050565b600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156130f357600080fd5b60028281548110151561310257fe5b906000526020600020900160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600082821115151561314357fe5b818303905092915050565b600080828401905083811015151561316257fe5b8091505092915050565b602060405190810160405280600081525090565b608060405190810160405280600073ffffffffffffffffffffffffffffffffffffffff1681526020016131b16134ad565b815260200160008152602001600081525090565b8154818355818115116131f2576004028160040283600052602060002091820191016131f191906134c1565b5b505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061323857805160ff1916838001178555613266565b82800160010185558215613266579182015b8281111561326557825182559160200191906001019061324a565b5b5090506132739190613527565b5090565b8154818355818115116132a4576003028160030283600052602060002091820191016132a3919061354c565b5b505050565b6060604051908101604052806000801916815260200160008152602001600081525090565b8154818355818115116132fb576003028160030283600052602060002091820191016132fa91906135a2565b5b505050565b606060405190810160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600081525090565b81548183558181151161336557600302816003028360005260206000209182019101613364919061354c565b5b505050565b815481835581811511613391578183600052602060002091820191016133909190613527565b5b505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106133cf578054855561340c565b8280016001018555821561340c57600052602060002091601f016020900482015b8281111561340b5782548255916001019190600101906133f0565b5b5090506134199190613527565b5090565b81548183558181151161344a5760040281600402836000526020600020918201910161344991906134c1565b5b505050565b81548183558181151161347c5760030281600302836000526020600020918201910161347b91906135a2565b5b505050565b8154818355818115116134a8578183600052602060002091820191016134a79190613527565b5b505050565b602060405190810160405280600081525090565b61352491905b8082111561352057600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560018201600061350791906135d9565b60028201600090556003820160009055506004016134c7565b5090565b90565b61354991905b8082111561354557600081600090555060010161352d565b5090565b90565b61359f91905b8082111561359b57600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001820160009055600282016000905550600301613552565b5090565b90565b6135d691905b808211156135d25760008082016000905560018201600090556002820160009055506003016135a8565b5090565b90565b50805460018160011615610100020316600290046000825580601f106135ff575061361e565b601f01602090049060005260206000209081019061361d9190613527565b5b505600a165627a7a7230582094c4450b4507ee4bda40c129baf3ee1ebfdcdad12a334a4634a08a0ea72fc6730029",
  "sourceMap": "180:1254:3:-;;;300:1:0;277:24;;327:1:3;309:19;;347:1;335:13;;677:235;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;540:10:31;532:5;;:18;;;;;;;;;;;;;;;;;;760:13:3;736:5;;:38;;;;;;;;;;;;;;;;;;677:235;180:1254;;;;;;",
  "deployedSourceMap": "180:1254:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1377:107:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1910:333:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:2;8:100;;;99:1;94:3;90;84:5;80:1;75:3;71;64:6;52:2;49:1;45:3;40:15;;8:100;;;12:14;3:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;527:559:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1785:117;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;654:429:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;345:327:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1492:324:6;;;;;;807:293:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2561:598:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;920:262:3;;;;;;;;;;;;;;;;;;;;;;;;;;1646:389:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1094:331:10;;;;;;;;;;;;;;;;;;;;;;;;;;277:24:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1108:285;;;;;;;;;;;;;;;;;;;;;;;;;;249:20:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1190:239:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2043:510:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3167:102;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;680:119:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1091:278:6;;;;;;;;;;;;;;;;;;;;;;;;;;443:203;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1007:187:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;873:190:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1433:344:10;;;;;;;;;;;;;;;;;;;;;;;;;;1071:567:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;274:28:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3277:142:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1377:107:6;1439:4;703:5:31;;;;;;;;;;;689:19;;:10;:19;;;681:28;;;;;;;;1463:6:6;:13;;;;1456:20;;1377:107;:::o;1910:333:10:-;1981:7;1990:4;1996:6;;:::i;:::-;2004:4;2021:28;;:::i;:::-;703:5:31;;;;;;;;;;;689:19;;:10;:19;;;681:28;;;;;;;;2052:11:10;2064:6;2052:19;;;;;;;;;;;;;;;;;;;;2021:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2104:10;:19;;;2138:10;:17;;;2170:10;:19;;;2204:10;:20;;;2082:153;;;;;;;;;;;1910:333;;;;;;:::o;527:559::-;590:4;770:28;;:::i;:::-;647:6;615;;;;;;;;;;;:16;;;632:10;615:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:38;;607:47;;;;;;;;667:6;;;;;;;;;;;:14;;;682:10;694:6;667:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;712:6;;;;;;;;;;;:19;;;732:10;744:4;750:6;712:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;801:150;;;;;;;;;837:10;801:150;;;;;;901:9;801:150;;;;870:6;801:150;;;;936:3;801:150;;;770:181;;964:11;:28;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;981:10;964:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;1005:73;1017:10;:19;;;1038:10;:17;;;1057:10;:20;;;1005:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;527:559;;;;;:::o;1785:117::-;1852:4;703:5:31;;;;;;;;;;;689:19;;:10;:19;;;681:28;;;;;;;;1876:11:10;:18;;;;1869:25;;1785:117;:::o;654:429:6:-;829:14;703:5:31;;;;;;;;;;;689:19;;:10;:19;;;681:28;;;;;;;;764:1:6;739:6;746;739:14;;;;;;;;;;;;;;;;;;;;:21;;;:26;;731:35;;;;;;;;846:9;;;;;;;;;;;:22;;;869:7;846:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;829:48;;898:22;910:9;898:7;:11;;:22;;;;:::i;:::-;888:32;;1026:6;1047:1;1033:6;:13;;;;:15;1026:23;;;;;;;;;;;;;;;;;;;;1009:6;1016;1009:14;;;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1060:6;:15;;;;;;;;;;;;:::i;:::-;;654:429;;;:::o;345:327:0:-;425:30;;:::i;:::-;703:5:31;;;;;;;;;;;689:19;;:10;:19;;;681:28;;;;;;;;458:107:0;;;;;;;;;490:4;458:107;;;;;;;517:7;458:107;;;;550:3;458:107;;;425:140;;589:32;602:11;:18;;;589:8;;:12;;:32;;;;:::i;:::-;578:8;:43;;;;634:12;:30;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;652:11;634:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;345:327;;;:::o;1492:324:6:-;1574:18;;:::i;:::-;1559:1;1547:9;:13;1539:22;;;;;;;;1595:111;;;;;;;;;1623:10;1595:111;;;;;;1656:9;1595:111;;;;1691:3;1595:111;;;1574:132;;1719:6;:18;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;1731:5;1719:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1750:58;1765:5;:11;;;1778:5;:12;;;1792:5;:15;;;1750:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1492:324;:::o;807:293:0:-;879:7;888:4;894;911:30;;:::i;:::-;703:5:31;;;;;;;;;;;689:19;;:10;:19;;;681:28;;;;;;;;944:12:0;957:6;944:20;;;;;;;;;;;;;;;;;;;;911:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;997:11;:15;;;1027:11;:18;;;1060:11;:21;;;975:117;;;;;;807:293;;;;;;:::o;2561:598:11:-;2655:10;2723:17;2772:18;703:5:31;;;;;;;;;;;689:19;;:10;:19;;;681:28;;;;;;;;2635:5:11;804:8:31;790:22;;:10;:22;;;782:31;;;;;;;;2707:4:11;2686:25;;:17;2697:5;2686:10;:17::i;:::-;:25;;;2678:34;;;;;;;;2743:5;:12;2749:5;2743:12;;;;;;;;;;;;;;;:18;;;2723:38;;2793:9;2822:1;2803:9;:16;;;;:20;2793:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;2772:52;;2861:10;2835:9;2845:12;2835:23;;;;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;2908:12;2882:5;:17;2888:10;2882:17;;;;;;;;;;;;;;;:23;;:38;;;;2932:9;:18;;;;;;;;;;;;:::i;:::-;;2972:5;2961:31;;;2979:12;2961:31;;;;;;;;;;;;;;;;;;3014:10;3003:118;;;3026:12;3040:5;:17;3046:10;3040:17;;;;;;;;;;;;;;;:23;;;3065:5;:17;3071:10;3065:17;;;;;;;;;;;;;;;:27;;;3094:5;:17;3100:10;3094:17;;;;;;;;;;;;;;;:26;;;3003:118;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3139:12;3132:19;;720:1:31;2561:598:11;;;;;:::o;920:262:3:-;1008:6;984:8;:20;993:10;984:20;;;;;;;;;;;;;;;;:30;;976:39;;;;;;;;1051:32;1076:6;1051:8;:20;1060:10;1051:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;1028:8;:20;1037:10;1028:20;;;;;;;;;;;;;;;:55;;;;1104:19;1116:6;1104:7;;:11;;:19;;;;:::i;:::-;1094:7;:29;;;;1155:10;1136:38;;;1167:6;1136:38;;;;;;;;;;;;;;;;;;920:262;:::o;1646:389:11:-;1751:10;1763:13;1778:17;1797:16;703:5:31;;;;;;;;;;;689:19;;:10;:19;;;681:28;;;;;;;;1705:5:11;804:8:31;790:22;;:10;:22;;;782:31;;;;;;;;1855:4:11;1834:25;;:17;1845:5;1834:10;:17::i;:::-;:25;;;1826:34;;;;;;;;1892:5;:12;1898:5;1892:12;;;;;;;;;;;;;;;:18;;;1925:5;:12;1931:5;1925:12;;;;;;;;;;;;;;;:18;;;1958:5;:12;1964:5;1958:12;;;;;;;;;;;;;;;:22;;;1995:5;:12;2001:5;1995:12;;;;;;;;;;;;;;;:21;;;1871:156;;;;;;;;720:1:31;1646:389:11;;;;;:::o;1094:331:10:-;1215:28;;:::i;:::-;703:5:31;;;;;;;;;;;689:19;;:10;:19;;;681:28;;;;;;;;1200:1:10;1170:11;1182:6;1170:19;;;;;;;;;;;;;;;;;;;;:26;;;:31;;1162:40;;;;;;;;1246:11;1258:6;1246:19;;;;;;;;;;;;;;;;;;;;1215:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1276:9;;;;;;;;;;;:23;;;1300:10;:17;;;1276:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1353:11;1384:1;1365:11;:18;;;;:20;1353:33;;;;;;;;;;;;;;;;;;;;1331:11;1343:6;1331:19;;;;;;;;;;;;;;;;;;;;:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;1397:11;:20;;;;;;;;;;;;:::i;:::-;;1094:331;;:::o;277:24:0:-;;;;:::o;1108:285::-;703:5:31;;;;;;;;;;;689:19;;:10;:19;;;681:28;;;;;;;;1215:1:0;1184:12;1197:6;1184:20;;;;;;;;;;;;;;;;;;;;:27;;;:32;;1176:41;;;;;;;;1241;1254:12;1267:6;1254:20;;;;;;;;;;;;;;;;;;;;:27;;;1241:8;;:12;;:41;;;;:::i;:::-;1230:8;:52;;;;1318:12;1351:1;1331:12;:19;;;;:21;1318:35;;;;;;;;;;;;;;;;;;;;1295:12;1308:6;1295:20;;;;;;;;;;;;;;;;;;;;:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1364:12;:21;;;;;;;;;;;;:::i;:::-;;1108:285;:::o;249:20:31:-;;;;;;;;;;;;;:::o;1190:239:3:-;1251:4;1268:14;1301:4;1295:3;;1285:7;:13;:20;;;;;;;;1268:37;;1335:1;1322:9;:14;1318:104;;;1360:1;1353:8;;;;1318:104;1401:9;1394:16;;1190:239;;;;;:::o;2043:510:11:-;2265:4;703:5:31;;;;;;;;;;;689:19;;:10;:19;;;681:28;;;;;;;;2160:5:11;804:8:31;790:22;;:10;:22;;;782:31;;;;;;;;2193:6:11;843:1;820:20;:24;;;812:33;;;;;;;;2215:10;843:1;820:20;:24;;;812:33;;;;;;;;2241:9;843:1;820:20;:24;;;812:33;;;;;;;;2311:4;2290:25;;:17;2301:5;2290:10;:17::i;:::-;:25;;;2282:34;;;;;;;;2348:6;2327:5;:12;2333:5;2327:12;;;;;;;;;;;;;;;:18;;:27;;;;;;;2390:10;2365:5;:12;2371:5;2365:12;;;;;;;;;;;;;;;:22;;:35;;;;;;;2435:9;2411:5;:12;2417:5;2411:12;;;;;;;;;;;;;;;:21;;:33;;;;;;;2466:5;2455:68;;;2473:5;:12;2479:5;2473:12;;;;;;;;;;;;;;;:18;;;2493:6;2501:10;2513:9;2455:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2541:4;2534:11;;856:1;;824::31;720;2043:510:11;;;;;;:::o;3167:102::-;3215:10;3245:9;:16;;;;3238:23;;3167:102;:::o;680:119:0:-;748:4;703:5:31;;;;;;;;;;;689:19;;:10;:19;;;681:28;;;;;;;;772:12:0;:19;;;;765:26;;680:119;:::o;1091:278:6:-;1202:18;;:::i;:::-;703:5:31;;;;;;;;;;;689:19;;:10;:19;;;681:28;;;;;;;;1187:1:6;1162:6;1169;1162:14;;;;;;;;;;;;;;;;;;;;:21;;;:26;;1154:35;;;;;;;;1223:6;1230;1223:14;;;;;;;;;;;;;;;;;;;;1202:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1248:5;:11;;;:20;;:34;1269:5;:12;;;1248:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1312:6;1333:1;1319:6;:13;;;;:15;1312:23;;;;;;;;;;;;;;;;;;;;1295:6;1302;1295:14;;;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1346:6;:15;;;;;;;;;;;;:::i;:::-;;1091:278;;:::o;443:203::-;509:7;518:4;524;541:18;;:::i;:::-;703:5:31;;;;;;;;;;;689:19;;:10;:19;;;681:28;;;;;;;;562:6:6;569;562:14;;;;;;;;;;;;;;;;;;;;541:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;595:5;:11;;;608:5;:12;;;622:5;:15;;;587:51;;;;;;443:203;;;;;;:::o;1007:187:31:-;703:5;;;;;;;;;;;689:19;;:10;:19;;;681:28;;;;;;;;1108:1;1088:22;;:8;:22;;;;1080:31;;;;;;;;1150:8;1122:37;;1143:5;;;;;;;;;;;1122:37;;;;;;;;;;;;1178:8;1170:5;;:16;;;;;;;;;;;;;;;;;;1007:187;:::o;873:190:11:-;932:14;982:1;962:9;:16;;;;:21;959:38;;;992:5;985:12;;;;959:38;1049:5;1016:38;;:9;1026:5;:12;1032:5;1026:12;;;;;;;;;;;;;;;:18;;;1016:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;:38;;;1008:47;;873:190;;;;:::o;1433:344:10:-;1554:28;;:::i;:::-;703:5:31;;;;;;;;;;;689:19;;:10;:19;;;681:28;;;;;;;;1539:1:10;1509:11;1521:6;1509:19;;;;;;;;;;;;;;;;;;;;:26;;;:31;;1501:40;;;;;;;;1585:11;1597:6;1585:19;;;;;;;;;;;;;;;;;;;;1554:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1615:6;;;;;;;;;;;:15;;;1631:10;:19;;;1652:10;:17;;;1615:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1705:11;1736:1;1717:11;:18;;;;:20;1705:33;;;;;;;;;;;;;;;;;;;;1683:11;1695:6;1683:19;;;;;;;;;;;;;;;;;;;;:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;1749:11;:20;;;;;;;;;;;;:::i;:::-;;1433:344;;:::o;1071:567:11:-;1272:10;1173:6;843:1;820:20;:24;;;812:33;;;;;;;;703:5:31;;;;;;;;;;;689:19;;:10;:19;;;681:28;;;;;;;;1222:10:11;843:1;820:20;:24;;;812:33;;;;;;;;1248:9;843:1;820:20;:24;;;812:33;;;;;;;;1324:5;1303:26;;:17;1314:5;1303:10;:17::i;:::-;:26;;;1295:35;;;;;;;;1362:6;1341:5;:12;1347:5;1341:12;;;;;;;;;;;;;;;:18;;:27;;;;;;;1404:10;1379:5;:12;1385:5;1379:12;;;;;;;;;;;;;;;:22;;:35;;;;;;;1449:9;1425:5;:12;1431:5;1425:12;;;;;;;;;;;;;;;:21;;:33;;;;;;;1514:1;1490:9;:21;;;;;;;;;;;:::i;:::-;;;;;;;;;;1505:5;1490:21;;;;;;;;;;;;;;;;;;;;;;:25;1469:5;:12;1475:5;1469:12;;;;;;;;;;;;;;;:18;;:46;;;;1534:5;1526:66;;;1541:5;:12;1547:5;1541:12;;;;;;;;;;;;;;;:18;;;1562:6;1570:10;1582:9;1526:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1629:1;1610:9;:16;;;;:20;1603:27;;856:1;720::31;1071:567:11;;;;;;;:::o;274:28:3:-;;;;;;;;;;;;;:::o;3277:142:11:-;3362:13;703:5:31;;;;;;;;;;;689:19;;:10;:19;;;681:28;;;;;;;;3395:9:11;3405:5;3395:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;3388:23;;3277:142;;;:::o;939:123:38:-;997:7;1029:1;1024;:6;;1017:14;;;;;;1053:1;1049;:5;1042:12;;939:123;;;;:::o;1137:147::-;1195:7;1215:9;1231:1;1227;:5;1215:17;;1255:1;1250;:6;;1243:14;;;;;;1275:1;1268:8;;1137:147;;;;;:::o;180:1254:3:-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o",
  "source": "pragma solidity ^0.4.19;\r\n\r\nimport \"./zeppelin/SafeMath.sol\";\r\nimport \"./Order.sol\";\r\nimport \"./Certificate.sol\";\r\nimport \"./Redemption.sol\";\r\nimport \"./PowerPiperToken.sol\";\r\n\r\n\r\ncontract Exchange is Orders, Certificates, Redemptions {\r\n    using SafeMath for uint;\r\n\r\n    PowerPiperToken public token;\r\n    uint256 _supply = 0;\r\n    uint fee  = 1;\r\n    mapping(address => uint) balances;\r\n    event DestroyTokensEvent(address indexed _from, uint _value);\r\n    // uint public fee = 300; // 300 = 0.3% in 1-digit precision\r\n    // uint public energyPriceMarkup = 1000; // 1000 = 1% in 3-digit precision\r\n\r\n    // @TODO fee functions duplicate with Token, should be united\r\n    function Exchange(address _tokenAddress) public {\r\n        token = PowerPiperToken(_tokenAddress);\r\n        // fee = 300; // 300 = 0.3% in 1-digit precision\r\n        // energyPriceMarkup = 1000; // 1000 = 1% in 3-digit precision\r\n    }\r\n\r\n    function destroyTokens(uint _value) external {\r\n        require(balances[msg.sender] >= _value);\r\n\r\n        balances[msg.sender] = balances[msg.sender].sub(_value);\r\n        _supply = _supply.sub(_value);\r\n\r\n        DestroyTokensEvent(msg.sender, _value);\r\n    }\r\n\r\n    function calculateFee(uint _amount) public constant returns (uint) {\r\n        uint feeAmount = _amount * fee / 1000;\r\n\r\n        if (feeAmount == 0) {\r\n            return 1;\r\n        } else {\r\n            return feeAmount;\r\n        }\r\n    }\r\n\r\n}\r\n",
  "sourcePath": "C:\\Users\\DXenu\\Desktop\\box\\demo_contract\\contracts\\Exchange.sol",
  "ast": {
    "absolutePath": "/C/Users/DXenu/Desktop/box/demo_contract/contracts/Exchange.sol",
    "exportedSymbols": {
      "Exchange": [
        652
      ]
    },
    "id": 653,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 540,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".19"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:3"
      },
      {
        "absolutePath": "/C/Users/DXenu/Desktop/box/demo_contract/contracts/zeppelin/SafeMath.sol",
        "file": "./zeppelin/SafeMath.sol",
        "id": 541,
        "nodeType": "ImportDirective",
        "scope": 653,
        "sourceUnit": 4016,
        "src": "28:33:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/DXenu/Desktop/box/demo_contract/contracts/Order.sol",
        "file": "./Order.sol",
        "id": 542,
        "nodeType": "ImportDirective",
        "scope": 653,
        "sourceUnit": 925,
        "src": "63:21:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/DXenu/Desktop/box/demo_contract/contracts/Certificate.sol",
        "file": "./Certificate.sol",
        "id": 543,
        "nodeType": "ImportDirective",
        "scope": 653,
        "sourceUnit": 137,
        "src": "86:27:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/DXenu/Desktop/box/demo_contract/contracts/Redemption.sol",
        "file": "./Redemption.sol",
        "id": 544,
        "nodeType": "ImportDirective",
        "scope": 653,
        "sourceUnit": 1788,
        "src": "115:26:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/DXenu/Desktop/box/demo_contract/contracts/PowerPiperToken.sol",
        "file": "./PowerPiperToken.sol",
        "id": 545,
        "nodeType": "ImportDirective",
        "scope": 653,
        "sourceUnit": 1553,
        "src": "143:31:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": [],
            "baseName": {
              "contractScope": null,
              "id": 546,
              "name": "Orders",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 924,
              "src": "201:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Orders_$924",
                "typeString": "contract Orders"
              }
            },
            "id": 547,
            "nodeType": "InheritanceSpecifier",
            "src": "201:6:3"
          },
          {
            "arguments": [],
            "baseName": {
              "contractScope": null,
              "id": 548,
              "name": "Certificates",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 136,
              "src": "209:12:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Certificates_$136",
                "typeString": "contract Certificates"
              }
            },
            "id": 549,
            "nodeType": "InheritanceSpecifier",
            "src": "209:12:3"
          },
          {
            "arguments": [],
            "baseName": {
              "contractScope": null,
              "id": 550,
              "name": "Redemptions",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1787,
              "src": "223:11:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Redemptions_$1787",
                "typeString": "contract Redemptions"
              }
            },
            "id": 551,
            "nodeType": "InheritanceSpecifier",
            "src": "223:11:3"
          }
        ],
        "contractDependencies": [
          136,
          924,
          1787,
          2192,
          3394
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 652,
        "linearizedBaseContracts": [
          652,
          1787,
          136,
          924,
          2192,
          3394
        ],
        "name": "Exchange",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 554,
            "libraryName": {
              "contractScope": null,
              "id": 552,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4015,
              "src": "248:8:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$4015",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "242:24:3",
            "typeName": {
              "id": 553,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "261:4:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 556,
            "name": "token",
            "nodeType": "VariableDeclaration",
            "scope": 652,
            "src": "274:28:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_PowerPiperToken_$1552",
              "typeString": "contract PowerPiperToken"
            },
            "typeName": {
              "contractScope": null,
              "id": 555,
              "name": "PowerPiperToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1552,
              "src": "274:15:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_PowerPiperToken_$1552",
                "typeString": "contract PowerPiperToken"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 559,
            "name": "_supply",
            "nodeType": "VariableDeclaration",
            "scope": 652,
            "src": "309:19:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 557,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "309:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 558,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "327:1:3",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 562,
            "name": "fee",
            "nodeType": "VariableDeclaration",
            "scope": 652,
            "src": "335:13:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 560,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "335:4:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "31",
              "id": 561,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "347:1:3",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 566,
            "name": "balances",
            "nodeType": "VariableDeclaration",
            "scope": 652,
            "src": "355:33:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 565,
              "keyType": {
                "id": 563,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "363:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "355:24:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 564,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "374:4:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "id": 572,
            "name": "DestroyTokensEvent",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 571,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 568,
                  "indexed": true,
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "scope": 572,
                  "src": "420:21:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 567,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "420:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 570,
                  "indexed": false,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 572,
                  "src": "443:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 569,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "443:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "419:36:3"
            },
            "src": "395:61:3"
          },
          {
            "body": {
              "id": 583,
              "nodeType": "Block",
              "src": "725:187:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 581,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 577,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 556,
                      "src": "736:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PowerPiperToken_$1552",
                        "typeString": "contract PowerPiperToken"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 579,
                          "name": "_tokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 574,
                          "src": "760:13:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 578,
                        "name": "PowerPiperToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1552,
                        "src": "744:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_PowerPiperToken_$1552_$",
                          "typeString": "type(contract PowerPiperToken)"
                        }
                      },
                      "id": 580,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "744:30:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PowerPiperToken_$1552",
                        "typeString": "contract PowerPiperToken"
                      }
                    },
                    "src": "736:38:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PowerPiperToken_$1552",
                      "typeString": "contract PowerPiperToken"
                    }
                  },
                  "id": 582,
                  "nodeType": "ExpressionStatement",
                  "src": "736:38:3"
                }
              ]
            },
            "id": 584,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "Exchange",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 575,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 574,
                  "name": "_tokenAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 584,
                  "src": "695:21:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 573,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "695:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "694:23:3"
            },
            "payable": false,
            "returnParameters": {
              "id": 576,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "725:0:3"
            },
            "scope": 652,
            "src": "677:235:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 624,
              "nodeType": "Block",
              "src": "965:217:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 595,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 590,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 566,
                            "src": "984:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 593,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 591,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4615,
                              "src": "993:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 592,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "993:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "984:20:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 594,
                          "name": "_value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 586,
                          "src": "1008:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "984:30:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 589,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4618,
                      "src": "976:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 596,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "976:39:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 597,
                  "nodeType": "ExpressionStatement",
                  "src": "976:39:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 609,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 598,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 566,
                        "src": "1028:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 601,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 599,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4615,
                          "src": "1037:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 600,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1037:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1028:20:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 607,
                          "name": "_value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 586,
                          "src": "1076:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 602,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 566,
                            "src": "1051:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 605,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 603,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4615,
                              "src": "1060:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 604,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1060:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1051:20:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 606,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3990,
                        "src": "1051:24:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 608,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1051:32:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1028:55:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 610,
                  "nodeType": "ExpressionStatement",
                  "src": "1028:55:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 616,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 611,
                      "name": "_supply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 559,
                      "src": "1094:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 614,
                          "name": "_value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 586,
                          "src": "1116:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 612,
                          "name": "_supply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 559,
                          "src": "1104:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 613,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3990,
                        "src": "1104:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 615,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1104:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1094:29:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 617,
                  "nodeType": "ExpressionStatement",
                  "src": "1094:29:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 619,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4615,
                          "src": "1155:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 620,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1155:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 621,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 586,
                        "src": "1167:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 618,
                      "name": "DestroyTokensEvent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 572,
                      "src": "1136:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 622,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1136:38:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 623,
                  "nodeType": "ExpressionStatement",
                  "src": "1136:38:3"
                }
              ]
            },
            "id": 625,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "destroyTokens",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 587,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 586,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 625,
                  "src": "943:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 585,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "943:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "942:13:3"
            },
            "payable": false,
            "returnParameters": {
              "id": 588,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "965:0:3"
            },
            "scope": 652,
            "src": "920:262:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 650,
              "nodeType": "Block",
              "src": "1257:172:3",
              "statements": [
                {
                  "assignments": [
                    633
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 633,
                      "name": "feeAmount",
                      "nodeType": "VariableDeclaration",
                      "scope": 651,
                      "src": "1268:14:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 632,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1268:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 639,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 638,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 636,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 634,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 627,
                        "src": "1285:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 635,
                        "name": "fee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 562,
                        "src": "1295:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "1285:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "31303030",
                      "id": 637,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1301:4:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000_by_1",
                        "typeString": "int_const 1000"
                      },
                      "value": "1000"
                    },
                    "src": "1285:20:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1268:37:3"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 642,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 640,
                      "name": "feeAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 633,
                      "src": "1322:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 641,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1335:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1322:14:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 648,
                    "nodeType": "Block",
                    "src": "1379:43:3",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 646,
                          "name": "feeAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 633,
                          "src": "1401:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 631,
                        "id": 647,
                        "nodeType": "Return",
                        "src": "1394:16:3"
                      }
                    ]
                  },
                  "id": 649,
                  "nodeType": "IfStatement",
                  "src": "1318:104:3",
                  "trueBody": {
                    "id": 645,
                    "nodeType": "Block",
                    "src": "1338:35:3",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 643,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1360:1:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "functionReturnParameters": 631,
                        "id": 644,
                        "nodeType": "Return",
                        "src": "1353:8:3"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 651,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "calculateFee",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 628,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 627,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 651,
                  "src": "1212:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 626,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1212:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1211:14:3"
            },
            "payable": false,
            "returnParameters": {
              "id": 631,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 630,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 651,
                  "src": "1251:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 629,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1251:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1250:6:3"
            },
            "scope": 652,
            "src": "1190:239:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 653,
        "src": "180:1254:3"
      }
    ],
    "src": "0:1436:3"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/DXenu/Desktop/box/demo_contract/contracts/Exchange.sol",
    "exportedSymbols": {
      "Exchange": [
        652
      ]
    },
    "id": 653,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 540,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".19"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:3"
      },
      {
        "absolutePath": "/C/Users/DXenu/Desktop/box/demo_contract/contracts/zeppelin/SafeMath.sol",
        "file": "./zeppelin/SafeMath.sol",
        "id": 541,
        "nodeType": "ImportDirective",
        "scope": 653,
        "sourceUnit": 4016,
        "src": "28:33:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/DXenu/Desktop/box/demo_contract/contracts/Order.sol",
        "file": "./Order.sol",
        "id": 542,
        "nodeType": "ImportDirective",
        "scope": 653,
        "sourceUnit": 925,
        "src": "63:21:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/DXenu/Desktop/box/demo_contract/contracts/Certificate.sol",
        "file": "./Certificate.sol",
        "id": 543,
        "nodeType": "ImportDirective",
        "scope": 653,
        "sourceUnit": 137,
        "src": "86:27:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/DXenu/Desktop/box/demo_contract/contracts/Redemption.sol",
        "file": "./Redemption.sol",
        "id": 544,
        "nodeType": "ImportDirective",
        "scope": 653,
        "sourceUnit": 1788,
        "src": "115:26:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/DXenu/Desktop/box/demo_contract/contracts/PowerPiperToken.sol",
        "file": "./PowerPiperToken.sol",
        "id": 545,
        "nodeType": "ImportDirective",
        "scope": 653,
        "sourceUnit": 1553,
        "src": "143:31:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": [],
            "baseName": {
              "contractScope": null,
              "id": 546,
              "name": "Orders",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 924,
              "src": "201:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Orders_$924",
                "typeString": "contract Orders"
              }
            },
            "id": 547,
            "nodeType": "InheritanceSpecifier",
            "src": "201:6:3"
          },
          {
            "arguments": [],
            "baseName": {
              "contractScope": null,
              "id": 548,
              "name": "Certificates",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 136,
              "src": "209:12:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Certificates_$136",
                "typeString": "contract Certificates"
              }
            },
            "id": 549,
            "nodeType": "InheritanceSpecifier",
            "src": "209:12:3"
          },
          {
            "arguments": [],
            "baseName": {
              "contractScope": null,
              "id": 550,
              "name": "Redemptions",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1787,
              "src": "223:11:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Redemptions_$1787",
                "typeString": "contract Redemptions"
              }
            },
            "id": 551,
            "nodeType": "InheritanceSpecifier",
            "src": "223:11:3"
          }
        ],
        "contractDependencies": [
          136,
          924,
          1787,
          2192,
          3394
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 652,
        "linearizedBaseContracts": [
          652,
          1787,
          136,
          924,
          2192,
          3394
        ],
        "name": "Exchange",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 554,
            "libraryName": {
              "contractScope": null,
              "id": 552,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4015,
              "src": "248:8:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$4015",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "242:24:3",
            "typeName": {
              "id": 553,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "261:4:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 556,
            "name": "token",
            "nodeType": "VariableDeclaration",
            "scope": 652,
            "src": "274:28:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_PowerPiperToken_$1552",
              "typeString": "contract PowerPiperToken"
            },
            "typeName": {
              "contractScope": null,
              "id": 555,
              "name": "PowerPiperToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1552,
              "src": "274:15:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_PowerPiperToken_$1552",
                "typeString": "contract PowerPiperToken"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 559,
            "name": "_supply",
            "nodeType": "VariableDeclaration",
            "scope": 652,
            "src": "309:19:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 557,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "309:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 558,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "327:1:3",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 562,
            "name": "fee",
            "nodeType": "VariableDeclaration",
            "scope": 652,
            "src": "335:13:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 560,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "335:4:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "31",
              "id": 561,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "347:1:3",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 566,
            "name": "balances",
            "nodeType": "VariableDeclaration",
            "scope": 652,
            "src": "355:33:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 565,
              "keyType": {
                "id": 563,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "363:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "355:24:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 564,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "374:4:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "id": 572,
            "name": "DestroyTokensEvent",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 571,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 568,
                  "indexed": true,
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "scope": 572,
                  "src": "420:21:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 567,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "420:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 570,
                  "indexed": false,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 572,
                  "src": "443:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 569,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "443:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "419:36:3"
            },
            "src": "395:61:3"
          },
          {
            "body": {
              "id": 583,
              "nodeType": "Block",
              "src": "725:187:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 581,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 577,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 556,
                      "src": "736:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PowerPiperToken_$1552",
                        "typeString": "contract PowerPiperToken"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 579,
                          "name": "_tokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 574,
                          "src": "760:13:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 578,
                        "name": "PowerPiperToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1552,
                        "src": "744:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_PowerPiperToken_$1552_$",
                          "typeString": "type(contract PowerPiperToken)"
                        }
                      },
                      "id": 580,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "744:30:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PowerPiperToken_$1552",
                        "typeString": "contract PowerPiperToken"
                      }
                    },
                    "src": "736:38:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PowerPiperToken_$1552",
                      "typeString": "contract PowerPiperToken"
                    }
                  },
                  "id": 582,
                  "nodeType": "ExpressionStatement",
                  "src": "736:38:3"
                }
              ]
            },
            "id": 584,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "Exchange",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 575,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 574,
                  "name": "_tokenAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 584,
                  "src": "695:21:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 573,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "695:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "694:23:3"
            },
            "payable": false,
            "returnParameters": {
              "id": 576,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "725:0:3"
            },
            "scope": 652,
            "src": "677:235:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 624,
              "nodeType": "Block",
              "src": "965:217:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 595,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 590,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 566,
                            "src": "984:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 593,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 591,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4615,
                              "src": "993:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 592,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "993:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "984:20:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 594,
                          "name": "_value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 586,
                          "src": "1008:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "984:30:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 589,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4618,
                      "src": "976:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 596,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "976:39:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 597,
                  "nodeType": "ExpressionStatement",
                  "src": "976:39:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 609,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 598,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 566,
                        "src": "1028:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 601,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 599,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4615,
                          "src": "1037:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 600,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1037:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1028:20:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 607,
                          "name": "_value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 586,
                          "src": "1076:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 602,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 566,
                            "src": "1051:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 605,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 603,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4615,
                              "src": "1060:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 604,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1060:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1051:20:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 606,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3990,
                        "src": "1051:24:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 608,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1051:32:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1028:55:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 610,
                  "nodeType": "ExpressionStatement",
                  "src": "1028:55:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 616,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 611,
                      "name": "_supply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 559,
                      "src": "1094:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 614,
                          "name": "_value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 586,
                          "src": "1116:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 612,
                          "name": "_supply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 559,
                          "src": "1104:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 613,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3990,
                        "src": "1104:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 615,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1104:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1094:29:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 617,
                  "nodeType": "ExpressionStatement",
                  "src": "1094:29:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 619,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4615,
                          "src": "1155:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 620,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1155:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 621,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 586,
                        "src": "1167:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 618,
                      "name": "DestroyTokensEvent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 572,
                      "src": "1136:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 622,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1136:38:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 623,
                  "nodeType": "ExpressionStatement",
                  "src": "1136:38:3"
                }
              ]
            },
            "id": 625,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "destroyTokens",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 587,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 586,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 625,
                  "src": "943:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 585,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "943:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "942:13:3"
            },
            "payable": false,
            "returnParameters": {
              "id": 588,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "965:0:3"
            },
            "scope": 652,
            "src": "920:262:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 650,
              "nodeType": "Block",
              "src": "1257:172:3",
              "statements": [
                {
                  "assignments": [
                    633
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 633,
                      "name": "feeAmount",
                      "nodeType": "VariableDeclaration",
                      "scope": 651,
                      "src": "1268:14:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 632,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1268:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 639,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 638,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 636,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 634,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 627,
                        "src": "1285:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 635,
                        "name": "fee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 562,
                        "src": "1295:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "1285:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "31303030",
                      "id": 637,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1301:4:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000_by_1",
                        "typeString": "int_const 1000"
                      },
                      "value": "1000"
                    },
                    "src": "1285:20:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1268:37:3"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 642,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 640,
                      "name": "feeAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 633,
                      "src": "1322:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 641,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1335:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1322:14:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 648,
                    "nodeType": "Block",
                    "src": "1379:43:3",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 646,
                          "name": "feeAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 633,
                          "src": "1401:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 631,
                        "id": 647,
                        "nodeType": "Return",
                        "src": "1394:16:3"
                      }
                    ]
                  },
                  "id": 649,
                  "nodeType": "IfStatement",
                  "src": "1318:104:3",
                  "trueBody": {
                    "id": 645,
                    "nodeType": "Block",
                    "src": "1338:35:3",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 643,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1360:1:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "functionReturnParameters": 631,
                        "id": 644,
                        "nodeType": "Return",
                        "src": "1353:8:3"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 651,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "calculateFee",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 628,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 627,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 651,
                  "src": "1212:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 626,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1212:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1211:14:3"
            },
            "payable": false,
            "returnParameters": {
              "id": 631,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 630,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 651,
                  "src": "1251:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 629,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1251:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1250:6:3"
            },
            "scope": 652,
            "src": "1190:239:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 653,
        "src": "180:1254:3"
      }
    ],
    "src": "0:1436:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.19+commit.c4cbbb05.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.0",
  "updatedAt": "2018-04-04T06:11:49.062Z"
}